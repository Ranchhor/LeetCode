class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector<vector<int>> ans;
        if(n<4) return ans;
        sort(nums.begin(),nums.end());
        for(int i=0; i<n-3; i++) {
            if(i>0 && nums[i-1] == nums[i]) continue;
            if(nums[i] + nums[i+1] + nums[i+2] + nums[i+3] > target) break;
            if(nums[i] + nums[n-1] + nums[n-2] + nums[n-3] < target) continue;
            for(int j=i+1; j<n-2; j++) {
                if(j!=i+1 && nums[j] == nums[j-1]) continue;
                if(nums[i] + nums[j] + nums[j+1] + nums[j+2] > target) break;
                if(nums[i] + nums[j] + nums[n-1] + nums[n-2] < target) continue;
                int left = j+1, right = n-1;
                while(left < right) {
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];
                    if(sum < target) left++;
                    else if(sum > target) right--;
                    else {
                        vector<int> vec {nums[i],nums[j],nums[left],nums[right]};
                        ans.push_back(vec);
                        do{
                            left++;
                        }while(left<right && nums[left] == nums[left-1]);
                        
                        do{
                            right--;
                        }while(left<right && nums[right+1] == nums[right]);
                    }
                }
            }
        }
        
        return ans;
    }
};